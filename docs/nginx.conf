server {
    listen 443 ssl;

    #填写证书绑定的域名
    server_name www.animationgpt.net;

    #填写证书文件绝对路径
    ssl_certificate conf/cert/www.animationgpt.net.pem;
    #填写证书私钥文件绝对路径
    ssl_certificate_key confcert/www.animationgpt.net.key;

    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout 5m;
    
    #自定义设置使用的TLS协议的类型以及加密套件（以下为配置示例，请您自行评估是否需要配置）
    #TLS协议版本越高，HTTPS通信的安全性越高，但是相较于低版本TLS协议，高版本TLS协议对浏览器的兼容性较差。
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
 d
    #表示优先使用服务端加密套件。默认开启
    ssl_prefer_server_ciphers on;

    root /usr/share/nginx/html;
    location / {
        try_files $uri $uri/ @router;		
        index index.html;
    }

    location ^~ /assets/examples {
        alias /usr/share/nginx/examples;
    }
    location @router {
        rewrite ^.*$ /index.html last;
    }
    location /api {
        proxy_pass  http://127.0.0.1:8082/;    #node api server 即需要代理的IP地址
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

}

server {
    listen 80;
    #填写证书绑定的域名
    server_name <yourdomain>;
    #将所有HTTP请求通过rewrite指令重定向到HTTPS。
    rewrite ^(.*)$ https://$host$1;
    location / {
        index index.html index.htm;
    }
}